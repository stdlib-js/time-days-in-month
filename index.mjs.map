{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isDateObject from '@stdlib/assert-is-date-object';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\nimport lowercase from '@stdlib/string-lowercase';\nimport isLeapYear from '@stdlib/assert-is-leap-year';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport currentYear from '@stdlib/time-current-year';\nimport DAYS_IN_MONTH from './days.json';\n\n\n// MAIN //\n\n/**\n* Returns the number of days in a month.\n*\n* @param {(string|Date|integer)} [month] - month (or Date)\n* @param {integer} [year] - year\n* @throws {TypeError} first argument must be either a string, integer, or `Date` object\n* @throws {Error} must provide a recognized month\n* @throws {RangeError} an integer month argument must be on the interval `[1,12]`\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} days in a month\n*\n* @example\n* var num = daysInMonth();\n* // returns <number>\n*\n* @example\n* var num = daysInMonth( 2 );\n* // returns <number>\n*\n* @example\n* var num = daysInMonth( 2, 2016 );\n* // returns 29\n*\n* @example\n* var num = daysInMonth( 2, 2017 );\n* // returns 28\n*/\nfunction daysInMonth( month, year ) {\n\tvar days;\n\tvar mon;\n\tvar yr;\n\tvar d;\n\tif ( arguments.length === 0 ) {\n\t\t// Note: cannot cache as application may cross over into a new year:\n\t\td = new Date();\n\t\tmon = d.getMonth() + 1; // zero-based\n\t\tyr = d.getFullYear();\n\t} else if ( arguments.length === 1 ) {\n\t\tif ( isDateObject( month ) ) {\n\t\t\td = month;\n\t\t\tmon = d.getMonth() + 1; // zero-based\n\t\t\tyr = d.getFullYear();\n\t\t} else if ( isString( month ) || isInteger( month ) ) {\n\t\t\t// Note: cannot cache as application may cross over into a new year:\n\t\t\tyr = currentYear();\n\t\t\tmon = month;\n\t\t} else {\n\t\t\tthrow new TypeError( format( '1QBAZ,LU', month ) );\n\t\t}\n\t} else {\n\t\tif ( !isString( month ) && !isInteger( month ) ) {\n\t\t\tthrow new TypeError( format( '1QBAX,LV', month ) );\n\t\t}\n\t\tif ( !isInteger( year ) ) {\n\t\t\tthrow new TypeError( format( '1QB7f,LW', year ) );\n\t\t}\n\t\tmon = month;\n\t\tyr = year;\n\t}\n\tif ( isInteger( mon ) && (mon < 1 || mon > 12) ) {\n\t\tthrow new RangeError( format( '1QBAa,LX', mon ) );\n\t}\n\tmon = lowercase( mon.toString() );\n\tdays = DAYS_IN_MONTH[ mon ];\n\tif ( days === void 0 ) {\n\t\tthrow new Error( format( '1QBAb,LY', mon ) );\n\t}\n\tif ( days === 28 && isLeapYear( yr ) ) {\n\t\tdays += 1;\n\t}\n\treturn days;\n}\n\n\n// EXPORTS //\n\nexport default daysInMonth;\n"],"names":["daysInMonth","month","year","days","mon","yr","d","arguments","length","Date","getMonth","getFullYear","isDateObject","isString","isInteger","TypeError","format","currentYear","RangeError","lowercase","toString","DAYS_IN_MONTH","Error","isLeapYear"],"mappings":";;k7BA6DA,SAASA,EAAaC,EAAOC,GAC5B,IAAIC,EACAC,EACAC,EACAC,EACJ,GAA0B,IAArBC,UAAUC,OAGdJ,GADAE,EAAI,IAAIG,MACAC,WAAa,EACrBL,EAAKC,EAAEK,mBACD,GAA0B,IAArBJ,UAAUC,OACrB,GAAKI,EAAcX,GAElBG,GADAE,EAAIL,GACIS,WAAa,EACrBL,EAAKC,EAAEK,kBACD,KAAKE,EAAUZ,KAAWa,EAAWb,GAK3C,MAAM,IAAIc,UAAWC,EAAQ,WAAYf,IAHzCI,EAAKY,IACLb,EAAMH,CAGN,KACK,CACN,IAAMY,EAAUZ,KAAYa,EAAWb,GACtC,MAAM,IAAIc,UAAWC,EAAQ,WAAYf,IAE1C,IAAMa,EAAWZ,GAChB,MAAM,IAAIa,UAAWC,EAAQ,WAAYd,IAE1CE,EAAMH,EACNI,EAAKH,CACL,CACD,GAAKY,EAAWV,KAAUA,EAAM,GAAKA,EAAM,IAC1C,MAAM,IAAIc,WAAYF,EAAQ,WAAYZ,IAI3C,GAFAA,EAAMe,EAAWf,EAAIgB,iBAEP,KADdjB,EAAOkB,EAAejB,IAErB,MAAM,IAAIkB,MAAON,EAAQ,WAAYZ,IAKtC,OAHc,KAATD,GAAeoB,EAAYlB,KAC/BF,GAAQ,GAEFA,CACR"}